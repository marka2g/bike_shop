name: CI Job Runner

on: pull_request

jobs:
  run_sobelow_security_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.14]
        otp: [25]
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v3
        id: mix-sobelow-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}-{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-sobelow-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Check Security with Sobelow
        run: mix sobelow --config
  run_mix_format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.14.1"]
        otp: ["25.0.4"]
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v3
        id: mix-format-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}-{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-format-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Check Format
        run: mix format --check-formatted
  run_dialyzer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.14.1"]
        otp: ["25.0.4"]
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v3
        id: mix-dialyzer-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}-{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-dialyzer-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Run Dialyzer
        run: mix dialyzer
  run_credo_linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.14.1"]
        otp: ["25.0.4"]
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v3
        id: mix-lint-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}-{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-lint-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Lint Check with Credo
        run: mix credo --strict
  run_coverage_check_and_run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.14.1"]
        otp: ["25.0.4"]
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v3
        id: mix-test-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}-{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-test-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix local.hex --force
          mix deps.get
          mix ecto.create
      - name: Check Coverage and Run Tests
        run: mix coveralls.html
    services:
      pg:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
